<div class="piece @SelectedClass"
    style="
        background-image: url(@BackgroundImageUrl);
        grid-column: @GridColumnStart / span 1;
        grid-row: @GridRowStart / span 1;
    "
    @onclick="@(e => this.OnClick.InvokeAsync(this.Position))"
    >
</div>

@code {
    [Parameter]
    public PiecePosition Position { get; set; }

    [Parameter]
    public EventCallback<PiecePosition> OnClick { get; set; }

    [Parameter]
    public bool IsSelected { get; set; }


    private string SelectedClass
    {
        get
        {
            return this.IsSelected ? "piece--selected" : "";
        }
    }

    private string BackgroundImageUrl
    {
        get
        {
            var color = this.Position.Color == Color.White ? "w" : "b";
            return String.Format(
                "images/pieces/california/{0}{1}.svg",
                color,
                this.Position.Piece.GetLetterCode()
            );
        }
    }

    private int GridColumnStart
    {
        get
        {
            return (int) this.Position.File;
        }
    }

    private int GridRowStart
    {
        get
        {
            return 9 - this.Position.Rank;
        }
    }
}